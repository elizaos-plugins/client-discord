{"version":3,"sources":["../../../node_modules/@smithy/node-config-provider/dist-es/getSelectorName.js","../../../node_modules/@smithy/node-config-provider/dist-es/fromEnv.js","../../../node_modules/@smithy/node-config-provider/dist-es/fromSharedConfigFiles.js","../../../node_modules/@smithy/node-config-provider/dist-es/fromStatic.js","../../../node_modules/@smithy/node-config-provider/dist-es/configLoader.js","../../../node_modules/@smithy/querystring-parser/dist-es/index.js","../../../node_modules/@smithy/url-parser/dist-es/index.js"],"sourcesContent":["export function getSelectorName(functionString) {\n    try {\n        const constants = new Set(Array.from(functionString.match(/([A-Z_]){3,}/g) ?? []));\n        constants.delete(\"CONFIG\");\n        constants.delete(\"CONFIG_PREFIX_SEPARATOR\");\n        constants.delete(\"ENV\");\n        return [...constants].join(\", \");\n    }\n    catch (e) {\n        return functionString;\n    }\n}\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getSelectorName } from \"./getSelectorName\";\nexport const fromEnv = (envVarSelector, logger) => async () => {\n    try {\n        const config = envVarSelector(process.env);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message || `Not found in ENV: ${getSelectorName(envVarSelector.toString())}`, { logger });\n    }\n};\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getProfileName, loadSharedConfigFiles } from \"@smithy/shared-ini-file-loader\";\nimport { getSelectorName } from \"./getSelectorName\";\nexport const fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const profile = getProfileName(init);\n    const { configFile, credentialsFile } = await loadSharedConfigFiles(init);\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const cfgFile = preferredFile === \"config\" ? configFile : credentialsFile;\n        const configValue = configSelector(mergedProfile, cfgFile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message || `Not found in config files w/ profile [${profile}]: ${getSelectorName(configSelector.toString())}`, { logger: init.logger });\n    }\n};\n","import { fromStatic as convertToProvider } from \"@smithy/property-provider\";\nconst isFunction = (func) => typeof func === \"function\";\nexport const fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => await defaultValue() : convertToProvider(defaultValue);\n","import { chain, memoize } from \"@smithy/property-provider\";\nimport { fromEnv } from \"./fromEnv\";\nimport { fromSharedConfigFiles } from \"./fromSharedConfigFiles\";\nimport { fromStatic } from \"./fromStatic\";\nexport const loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => memoize(chain(fromEnv(environmentVariableSelector), fromSharedConfigFiles(configFileSelector, configuration), fromStatic(defaultValue)));\n","export function parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n","import { parseQueryString } from \"@smithy/querystring-parser\";\nexport const parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n"],"mappings":";;;;;;;;;;;;AAAO,SAAS,gBAAgB,gBAAgB;AAC5C,MAAI;AACA,UAAM,YAAY,IAAI,IAAI,MAAM,KAAK,eAAe,MAAM,eAAe,KAAK,CAAC,CAAC,CAAC;AACjF,cAAU,OAAO,QAAQ;AACzB,cAAU,OAAO,yBAAyB;AAC1C,cAAU,OAAO,KAAK;AACtB,WAAO,CAAC,GAAG,SAAS,EAAE,KAAK,IAAI;AAAA,EACnC,SACO,GAAG;AACN,WAAO;AAAA,EACX;AACJ;;;ACTO,IAAM,UAAU,CAAC,gBAAgB,WAAW,YAAY;AAC3D,MAAI;AACA,UAAM,SAAS,eAAe,QAAQ,GAAG;AACzC,QAAI,WAAW,QAAW;AACtB,YAAM,IAAI,MAAM;AAAA,IACpB;AACA,WAAO;AAAA,EACX,SACO,GAAG;AACN,UAAM,IAAI,yBAAyB,EAAE,WAAW,qBAAqB,gBAAgB,eAAe,SAAS,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC;AAAA,EACjI;AACJ;;;ACVO,IAAM,wBAAwB,CAAC,gBAAgB,EAAE,gBAAgB,UAAU,GAAG,KAAK,IAAI,CAAC,MAAM,YAAY;AAC7G,QAAM,UAAU,eAAe,IAAI;AACnC,QAAM,EAAE,YAAY,gBAAgB,IAAI,MAAM,sBAAsB,IAAI;AACxE,QAAM,yBAAyB,gBAAgB,OAAO,KAAK,CAAC;AAC5D,QAAM,oBAAoB,WAAW,OAAO,KAAK,CAAC;AAClD,QAAM,gBAAgB,kBAAkB,WAClC,EAAE,GAAG,wBAAwB,GAAG,kBAAkB,IAClD,EAAE,GAAG,mBAAmB,GAAG,uBAAuB;AACxD,MAAI;AACA,UAAM,UAAU,kBAAkB,WAAW,aAAa;AAC1D,UAAM,cAAc,eAAe,eAAe,OAAO;AACzD,QAAI,gBAAgB,QAAW;AAC3B,YAAM,IAAI,MAAM;AAAA,IACpB;AACA,WAAO;AAAA,EACX,SACO,GAAG;AACN,UAAM,IAAI,yBAAyB,EAAE,WAAW,yCAAyC,OAAO,MAAM,gBAAgB,eAAe,SAAS,CAAC,CAAC,IAAI,EAAE,QAAQ,KAAK,OAAO,CAAC;AAAA,EAC/K;AACJ;;;ACrBA,IAAM,aAAa,CAAC,SAAS,OAAO,SAAS;AACtC,IAAMA,cAAa,CAAC,iBAAiB,WAAW,YAAY,IAAI,YAAY,MAAM,aAAa,IAAI,WAAkB,YAAY;;;ACEjI,IAAM,aAAa,CAAC,EAAE,6BAA6B,oBAAoB,SAAS,aAAa,GAAG,gBAAgB,CAAC,MAAM,QAAQ,MAAM,QAAQ,2BAA2B,GAAG,sBAAsB,oBAAoB,aAAa,GAAGC,YAAW,YAAY,CAAC,CAAC;;;ACJ9P,SAAS,iBAAiB,aAAa;AAC1C,QAAM,QAAQ,CAAC;AACf,gBAAc,YAAY,QAAQ,OAAO,EAAE;AAC3C,MAAI,aAAa;AACb,eAAW,QAAQ,YAAY,MAAM,GAAG,GAAG;AACvC,UAAI,CAAC,KAAK,QAAQ,IAAI,IAAI,KAAK,MAAM,GAAG;AACxC,YAAM,mBAAmB,GAAG;AAC5B,UAAI,OAAO;AACP,gBAAQ,mBAAmB,KAAK;AAAA,MACpC;AACA,UAAI,EAAE,OAAO,QAAQ;AACjB,cAAM,GAAG,IAAI;AAAA,MACjB,WACS,MAAM,QAAQ,MAAM,GAAG,CAAC,GAAG;AAChC,cAAM,GAAG,EAAE,KAAK,KAAK;AAAA,MACzB,OACK;AACD,cAAM,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,KAAK;AAAA,MACnC;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;;;ACrBO,IAAM,WAAW,CAAC,QAAQ;AAC7B,MAAI,OAAO,QAAQ,UAAU;AACzB,WAAO,SAAS,IAAI,IAAI,GAAG,CAAC;AAAA,EAChC;AACA,QAAM,EAAE,UAAU,UAAU,MAAM,UAAU,OAAO,IAAI;AACvD,MAAI;AACJ,MAAI,QAAQ;AACR,YAAQ,iBAAiB,MAAM;AAAA,EACnC;AACA,SAAO;AAAA,IACH;AAAA,IACA,MAAM,OAAO,SAAS,IAAI,IAAI;AAAA,IAC9B;AAAA,IACA,MAAM;AAAA,IACN;AAAA,EACJ;AACJ;","names":["fromStatic","fromStatic"]}
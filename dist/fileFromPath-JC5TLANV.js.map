{"version":3,"sources":["../../../node_modules/openai/node_modules/formdata-node/lib/esm/fileFromPath.js","../../../node_modules/openai/node_modules/formdata-node/lib/esm/isFunction.js","../../../node_modules/openai/node_modules/formdata-node/lib/esm/blobHelpers.js","../../../node_modules/openai/node_modules/formdata-node/lib/esm/Blob.js","../../../node_modules/openai/node_modules/formdata-node/lib/esm/File.js","../../../node_modules/openai/node_modules/formdata-node/lib/esm/isPlainObject.js","../../../node_modules/openai/node_modules/formdata-node/lib/esm/isFile.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FileFromPath_path, _FileFromPath_start;\nimport { statSync, createReadStream, promises as fs } from \"fs\";\nimport { basename } from \"path\";\nimport DOMException from \"node-domexception\";\nimport { File } from \"./File.js\";\nimport isPlainObject from \"./isPlainObject.js\";\nexport * from \"./isFile.js\";\nconst MESSAGE = \"The requested file could not be read, \"\n    + \"typically due to permission problems that have occurred after a reference \"\n    + \"to a file was acquired.\";\nclass FileFromPath {\n    constructor(input) {\n        _FileFromPath_path.set(this, void 0);\n        _FileFromPath_start.set(this, void 0);\n        __classPrivateFieldSet(this, _FileFromPath_path, input.path, \"f\");\n        __classPrivateFieldSet(this, _FileFromPath_start, input.start || 0, \"f\");\n        this.name = basename(__classPrivateFieldGet(this, _FileFromPath_path, \"f\"));\n        this.size = input.size;\n        this.lastModified = input.lastModified;\n    }\n    slice(start, end) {\n        return new FileFromPath({\n            path: __classPrivateFieldGet(this, _FileFromPath_path, \"f\"),\n            lastModified: this.lastModified,\n            size: end - start,\n            start\n        });\n    }\n    async *stream() {\n        const { mtimeMs } = await fs.stat(__classPrivateFieldGet(this, _FileFromPath_path, \"f\"));\n        if (mtimeMs > this.lastModified) {\n            throw new DOMException(MESSAGE, \"NotReadableError\");\n        }\n        if (this.size) {\n            yield* createReadStream(__classPrivateFieldGet(this, _FileFromPath_path, \"f\"), {\n                start: __classPrivateFieldGet(this, _FileFromPath_start, \"f\"),\n                end: __classPrivateFieldGet(this, _FileFromPath_start, \"f\") + this.size - 1\n            });\n        }\n    }\n    get [(_FileFromPath_path = new WeakMap(), _FileFromPath_start = new WeakMap(), Symbol.toStringTag)]() {\n        return \"File\";\n    }\n}\nfunction createFileFromPath(path, { mtimeMs, size }, filenameOrOptions, options = {}) {\n    let filename;\n    if (isPlainObject(filenameOrOptions)) {\n        [options, filename] = [filenameOrOptions, undefined];\n    }\n    else {\n        filename = filenameOrOptions;\n    }\n    const file = new FileFromPath({ path, size, lastModified: mtimeMs });\n    if (!filename) {\n        filename = file.name;\n    }\n    return new File([file], filename, {\n        ...options, lastModified: file.lastModified\n    });\n}\nexport function fileFromPathSync(path, filenameOrOptions, options = {}) {\n    const stats = statSync(path);\n    return createFileFromPath(path, stats, filenameOrOptions, options);\n}\nexport async function fileFromPath(path, filenameOrOptions, options) {\n    const stats = await fs.stat(path);\n    return createFileFromPath(path, stats, filenameOrOptions, options);\n}\n","export const isFunction = (value) => (typeof value === \"function\");\n","/*! Based on fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> & David Frank */\nimport { isFunction } from \"./isFunction.js\";\nconst CHUNK_SIZE = 65536;\nasync function* clonePart(part) {\n    const end = part.byteOffset + part.byteLength;\n    let position = part.byteOffset;\n    while (position !== end) {\n        const size = Math.min(end - position, CHUNK_SIZE);\n        const chunk = part.buffer.slice(position, position + size);\n        position += chunk.byteLength;\n        yield new Uint8Array(chunk);\n    }\n}\nasync function* consumeNodeBlob(blob) {\n    let position = 0;\n    while (position !== blob.size) {\n        const chunk = blob.slice(position, Math.min(blob.size, position + CHUNK_SIZE));\n        const buffer = await chunk.arrayBuffer();\n        position += buffer.byteLength;\n        yield new Uint8Array(buffer);\n    }\n}\nexport async function* consumeBlobParts(parts, clone = false) {\n    for (const part of parts) {\n        if (ArrayBuffer.isView(part)) {\n            if (clone) {\n                yield* clonePart(part);\n            }\n            else {\n                yield part;\n            }\n        }\n        else if (isFunction(part.stream)) {\n            yield* part.stream();\n        }\n        else {\n            yield* consumeNodeBlob(part);\n        }\n    }\n}\nexport function* sliceBlob(blobParts, blobSize, start = 0, end) {\n    end !== null && end !== void 0 ? end : (end = blobSize);\n    let relativeStart = start < 0\n        ? Math.max(blobSize + start, 0)\n        : Math.min(start, blobSize);\n    let relativeEnd = end < 0\n        ? Math.max(blobSize + end, 0)\n        : Math.min(end, blobSize);\n    const span = Math.max(relativeEnd - relativeStart, 0);\n    let added = 0;\n    for (const part of blobParts) {\n        if (added >= span) {\n            break;\n        }\n        const partSize = ArrayBuffer.isView(part) ? part.byteLength : part.size;\n        if (relativeStart && partSize <= relativeStart) {\n            relativeStart -= partSize;\n            relativeEnd -= partSize;\n        }\n        else {\n            let chunk;\n            if (ArrayBuffer.isView(part)) {\n                chunk = part.subarray(relativeStart, Math.min(partSize, relativeEnd));\n                added += chunk.byteLength;\n            }\n            else {\n                chunk = part.slice(relativeStart, Math.min(partSize, relativeEnd));\n                added += chunk.size;\n            }\n            relativeEnd -= partSize;\n            relativeStart = 0;\n            yield chunk;\n        }\n    }\n}\n","/*! Based on fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> & David Frank */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _Blob_parts, _Blob_type, _Blob_size;\nimport { ReadableStream } from \"web-streams-polyfill\";\nimport { isFunction } from \"./isFunction.js\";\nimport { consumeBlobParts, sliceBlob } from \"./blobHelpers.js\";\nexport class Blob {\n    constructor(blobParts = [], options = {}) {\n        _Blob_parts.set(this, []);\n        _Blob_type.set(this, \"\");\n        _Blob_size.set(this, 0);\n        options !== null && options !== void 0 ? options : (options = {});\n        if (typeof blobParts !== \"object\" || blobParts === null) {\n            throw new TypeError(\"Failed to construct 'Blob': \"\n                + \"The provided value cannot be converted to a sequence.\");\n        }\n        if (!isFunction(blobParts[Symbol.iterator])) {\n            throw new TypeError(\"Failed to construct 'Blob': \"\n                + \"The object must have a callable @@iterator property.\");\n        }\n        if (typeof options !== \"object\" && !isFunction(options)) {\n            throw new TypeError(\"Failed to construct 'Blob': parameter 2 cannot convert to dictionary.\");\n        }\n        const encoder = new TextEncoder();\n        for (const raw of blobParts) {\n            let part;\n            if (ArrayBuffer.isView(raw)) {\n                part = new Uint8Array(raw.buffer.slice(raw.byteOffset, raw.byteOffset + raw.byteLength));\n            }\n            else if (raw instanceof ArrayBuffer) {\n                part = new Uint8Array(raw.slice(0));\n            }\n            else if (raw instanceof Blob) {\n                part = raw;\n            }\n            else {\n                part = encoder.encode(String(raw));\n            }\n            __classPrivateFieldSet(this, _Blob_size, __classPrivateFieldGet(this, _Blob_size, \"f\") + (ArrayBuffer.isView(part) ? part.byteLength : part.size), \"f\");\n            __classPrivateFieldGet(this, _Blob_parts, \"f\").push(part);\n        }\n        const type = options.type === undefined ? \"\" : String(options.type);\n        __classPrivateFieldSet(this, _Blob_type, /^[\\x20-\\x7E]*$/.test(type) ? type : \"\", \"f\");\n    }\n    static [(_Blob_parts = new WeakMap(), _Blob_type = new WeakMap(), _Blob_size = new WeakMap(), Symbol.hasInstance)](value) {\n        return Boolean(value\n            && typeof value === \"object\"\n            && isFunction(value.constructor)\n            && (isFunction(value.stream)\n                || isFunction(value.arrayBuffer))\n            && /^(Blob|File)$/.test(value[Symbol.toStringTag]));\n    }\n    get type() {\n        return __classPrivateFieldGet(this, _Blob_type, \"f\");\n    }\n    get size() {\n        return __classPrivateFieldGet(this, _Blob_size, \"f\");\n    }\n    slice(start, end, contentType) {\n        return new Blob(sliceBlob(__classPrivateFieldGet(this, _Blob_parts, \"f\"), this.size, start, end), {\n            type: contentType\n        });\n    }\n    async text() {\n        const decoder = new TextDecoder();\n        let result = \"\";\n        for await (const chunk of consumeBlobParts(__classPrivateFieldGet(this, _Blob_parts, \"f\"))) {\n            result += decoder.decode(chunk, { stream: true });\n        }\n        result += decoder.decode();\n        return result;\n    }\n    async arrayBuffer() {\n        const view = new Uint8Array(this.size);\n        let offset = 0;\n        for await (const chunk of consumeBlobParts(__classPrivateFieldGet(this, _Blob_parts, \"f\"))) {\n            view.set(chunk, offset);\n            offset += chunk.length;\n        }\n        return view.buffer;\n    }\n    stream() {\n        const iterator = consumeBlobParts(__classPrivateFieldGet(this, _Blob_parts, \"f\"), true);\n        return new ReadableStream({\n            async pull(controller) {\n                const { value, done } = await iterator.next();\n                if (done) {\n                    return queueMicrotask(() => controller.close());\n                }\n                controller.enqueue(value);\n            },\n            async cancel() {\n                await iterator.return();\n            }\n        });\n    }\n    get [Symbol.toStringTag]() {\n        return \"Blob\";\n    }\n}\nObject.defineProperties(Blob.prototype, {\n    type: { enumerable: true },\n    size: { enumerable: true },\n    slice: { enumerable: true },\n    stream: { enumerable: true },\n    text: { enumerable: true },\n    arrayBuffer: { enumerable: true }\n});\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _File_name, _File_lastModified;\nimport { Blob } from \"./Blob.js\";\nexport class File extends Blob {\n    constructor(fileBits, name, options = {}) {\n        super(fileBits, options);\n        _File_name.set(this, void 0);\n        _File_lastModified.set(this, 0);\n        if (arguments.length < 2) {\n            throw new TypeError(\"Failed to construct 'File': 2 arguments required, \"\n                + `but only ${arguments.length} present.`);\n        }\n        __classPrivateFieldSet(this, _File_name, String(name), \"f\");\n        const lastModified = options.lastModified === undefined\n            ? Date.now()\n            : Number(options.lastModified);\n        if (!Number.isNaN(lastModified)) {\n            __classPrivateFieldSet(this, _File_lastModified, lastModified, \"f\");\n        }\n    }\n    static [(_File_name = new WeakMap(), _File_lastModified = new WeakMap(), Symbol.hasInstance)](value) {\n        return value instanceof Blob\n            && value[Symbol.toStringTag] === \"File\"\n            && typeof value.name === \"string\";\n    }\n    get name() {\n        return __classPrivateFieldGet(this, _File_name, \"f\");\n    }\n    get lastModified() {\n        return __classPrivateFieldGet(this, _File_lastModified, \"f\");\n    }\n    get webkitRelativePath() {\n        return \"\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"File\";\n    }\n}\n","const getType = (value) => (Object.prototype.toString.call(value).slice(8, -1).toLowerCase());\nfunction isPlainObject(value) {\n    if (getType(value) !== \"object\") {\n        return false;\n    }\n    const pp = Object.getPrototypeOf(value);\n    if (pp === null || pp === undefined) {\n        return true;\n    }\n    const Ctor = pp.constructor && pp.constructor.toString();\n    return Ctor === Object.toString();\n}\nexport default isPlainObject;\n","import { File } from \"./File.js\";\nexport const isFile = (value) => value instanceof File;\n"],"mappings":"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","names":["__classPrivateFieldSet","__classPrivateFieldGet","__classPrivateFieldSet","__classPrivateFieldGet","DOMException"]}
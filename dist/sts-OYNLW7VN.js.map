{"version":3,"sources":["../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthSchemeProvider.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/EndpointParameters.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/package.json","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/ruleset.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/endpointResolver.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.shared.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthExtensionConfiguration.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeExtensions.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STSClient.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/STSServiceException.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/models_0.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/protocols/Aws_query.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleCommand.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleWithWebIdentityCommand.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STS.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultStsRoleAssumers.js","../../../node_modules/@aws-sdk/client-bedrock-runtime/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultRoleAssumers.js"],"sourcesContent":["import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nimport { STSClient } from \"../STSClient\";\nexport const defaultSTSHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sts\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultSTSHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"AssumeRoleWithWebIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveStsAuthConfig = (input) => ({\n    ...input,\n    stsClientCtor: STSClient,\n});\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveStsAuthConfig(config);\n    const config_1 = resolveAwsSdkSigV4Config(config_0);\n    return {\n        ...config_1,\n    };\n};\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    };\n};\nexport const commonParams = {\n    UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","{\n  \"name\": \"@aws-sdk/nested-clients\",\n  \"version\": \"3.734.0\",\n  \"description\": \"Nested clients for AWS SDK packages.\",\n  \"main\": \"./dist-cjs/index.js\",\n  \"module\": \"./dist-es/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"scripts\": {\n    \"build\": \"yarn lint && concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline nested-clients\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"lint\": \"node ../../scripts/validation/submodules-linter.js --pkg nested-clients\",\n    \"test\": \"yarn g:vitest run\",\n    \"test:watch\": \"yarn g:vitest watch\"\n  },\n  \"engines\": {\n    \"node\": \">=18.0.0\"\n  },\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/core\": \"3.734.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.734.0\",\n    \"@aws-sdk/middleware-logger\": \"3.734.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.734.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.734.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.734.0\",\n    \"@aws-sdk/types\": \"3.734.0\",\n    \"@aws-sdk/util-endpoints\": \"3.734.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.734.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.734.0\",\n    \"@smithy/config-resolver\": \"^4.0.1\",\n    \"@smithy/core\": \"^3.1.1\",\n    \"@smithy/fetch-http-handler\": \"^5.0.1\",\n    \"@smithy/hash-node\": \"^4.0.1\",\n    \"@smithy/invalid-dependency\": \"^4.0.1\",\n    \"@smithy/middleware-content-length\": \"^4.0.1\",\n    \"@smithy/middleware-endpoint\": \"^4.0.2\",\n    \"@smithy/middleware-retry\": \"^4.0.3\",\n    \"@smithy/middleware-serde\": \"^4.0.1\",\n    \"@smithy/middleware-stack\": \"^4.0.1\",\n    \"@smithy/node-config-provider\": \"^4.0.1\",\n    \"@smithy/node-http-handler\": \"^4.0.2\",\n    \"@smithy/protocol-http\": \"^5.0.1\",\n    \"@smithy/smithy-client\": \"^4.1.2\",\n    \"@smithy/types\": \"^4.1.0\",\n    \"@smithy/url-parser\": \"^4.0.1\",\n    \"@smithy/util-base64\": \"^4.0.0\",\n    \"@smithy/util-body-length-browser\": \"^4.0.0\",\n    \"@smithy/util-body-length-node\": \"^4.0.0\",\n    \"@smithy/util-defaults-mode-browser\": \"^4.0.3\",\n    \"@smithy/util-defaults-mode-node\": \"^4.0.3\",\n    \"@smithy/util-endpoints\": \"^3.0.1\",\n    \"@smithy/util-middleware\": \"^4.0.1\",\n    \"@smithy/util-retry\": \"^4.0.1\",\n    \"@smithy/util-utf8\": \"^4.0.0\",\n    \"tslib\": \"^2.6.2\"\n  },\n  \"devDependencies\": {\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~5.2.2\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"./sso-oidc.d.ts\",\n    \"./sso-oidc.js\",\n    \"./sts.d.ts\",\n    \"./sts.js\",\n    \"dist-*/**\"\n  ],\n  \"browser\": {\n    \"./dist-es/submodules/sso-oidc/runtimeConfig\": \"./dist-es/submodules/sso-oidc/runtimeConfig.browser\",\n    \"./dist-es/submodules/sts/runtimeConfig\": \"./dist-es/submodules/sts/runtimeConfig.browser\"\n  },\n  \"react-native\": {},\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/packages/nested-clients\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"packages/nested-clients\"\n  },\n  \"exports\": {\n    \"./sso-oidc\": {\n      \"module\": \"./dist-es/submodules/sso-oidc/index.js\",\n      \"node\": \"./dist-cjs/submodules/sso-oidc/index.js\",\n      \"import\": \"./dist-es/submodules/sso-oidc/index.js\",\n      \"require\": \"./dist-cjs/submodules/sso-oidc/index.js\",\n      \"types\": \"./dist-types/submodules/sso-oidc/index.d.ts\"\n    },\n    \"./sts\": {\n      \"module\": \"./dist-es/submodules/sts/index.js\",\n      \"node\": \"./dist-cjs/submodules/sts/index.js\",\n      \"import\": \"./dist-es/submodules/sts/index.js\",\n      \"require\": \"./dist-cjs/submodules/sts/index.js\",\n      \"types\": \"./dist-types/submodules/sts/index.d.ts\"\n    }\n  }\n}\n","const F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"stringEquals\", e = \"sigv4\", f = \"sts\", g = \"us-east-1\", h = \"endpoint\", i = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", j = \"tree\", k = \"error\", l = \"getAttr\", m = { [F]: false, [G]: \"String\" }, n = { [F]: true, \"default\": false, [G]: \"Boolean\" }, o = { [J]: \"Endpoint\" }, p = { [H]: \"isSet\", [I]: [{ [J]: \"Region\" }] }, q = { [J]: \"Region\" }, r = { [H]: \"aws.partition\", [I]: [q], \"assign\": \"PartitionResult\" }, s = { [J]: \"UseFIPS\" }, t = { [J]: \"UseDualStack\" }, u = { \"url\": \"https://sts.amazonaws.com\", \"properties\": { \"authSchemes\": [{ \"name\": e, \"signingName\": f, \"signingRegion\": g }] }, \"headers\": {} }, v = {}, w = { \"conditions\": [{ [H]: d, [I]: [q, \"aws-global\"] }], [h]: u, [G]: h }, x = { [H]: c, [I]: [s, true] }, y = { [H]: c, [I]: [t, true] }, z = { [H]: l, [I]: [{ [J]: \"PartitionResult\" }, \"supportsFIPS\"] }, A = { [J]: \"PartitionResult\" }, B = { [H]: c, [I]: [true, { [H]: l, [I]: [A, \"supportsDualStack\"] }] }, C = [{ [H]: \"isSet\", [I]: [o] }], D = [x], E = [y];\nconst _data = { version: \"1.0\", parameters: { Region: m, UseDualStack: n, UseFIPS: n, Endpoint: m, UseGlobalEndpoint: n }, rules: [{ conditions: [{ [H]: c, [I]: [{ [J]: \"UseGlobalEndpoint\" }, b] }, { [H]: \"not\", [I]: C }, p, r, { [H]: c, [I]: [s, a] }, { [H]: c, [I]: [t, a] }], rules: [{ conditions: [{ [H]: d, [I]: [q, \"ap-northeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-south-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-2\"] }], endpoint: u, [G]: h }, w, { conditions: [{ [H]: d, [I]: [q, \"ca-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-north-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-3\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"sa-east-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, g] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-east-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-2\"] }], endpoint: u, [G]: h }, { endpoint: { url: i, properties: { authSchemes: [{ name: e, signingName: f, signingRegion: \"{Region}\" }] }, headers: v }, [G]: h }], [G]: j }, { conditions: C, rules: [{ conditions: D, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", [G]: k }, { conditions: E, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", [G]: k }, { endpoint: { url: o, properties: v, headers: v }, [G]: h }], [G]: j }, { conditions: [p], rules: [{ conditions: [r], rules: [{ conditions: [x, y], rules: [{ conditions: [{ [H]: c, [I]: [b, z] }, B], rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", [G]: k }], [G]: j }, { conditions: D, rules: [{ conditions: [{ [H]: c, [I]: [z, b] }], rules: [{ conditions: [{ [H]: d, [I]: [{ [H]: l, [I]: [A, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://sts.{Region}.amazonaws.com\", properties: v, headers: v }, [G]: h }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS is enabled but this partition does not support FIPS\", [G]: k }], [G]: j }, { conditions: E, rules: [{ conditions: [B], rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"DualStack is enabled but this partition does not support DualStack\", [G]: k }], [G]: j }, w, { endpoint: { url: i, properties: v, headers: v }, [G]: h }], [G]: j }], [G]: j }, { error: \"Invalid Configuration: Missing Region\", [G]: k }] };\nexport const ruleSet = _data;\n","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\", \"UseGlobalEndpoint\"],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultSTSHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2011-06-15\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSTSHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"STS\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import packageInfo from \"../../../package.json\";\nimport { AwsSdkSigV4Signer, emitWarningIfUnsupportedVersion as awsCheckVersion } from \"@aws-sdk/core\";\nimport { NODE_APP_ID_CONFIG_OPTIONS, createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-node\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@smithy/config-resolver\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { Hash } from \"@smithy/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@smithy/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@smithy/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@smithy/node-http-handler\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@smithy/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    awsCheckVersion(process.version);\n    const profileConfig = { profile: config?.profile };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\") ||\n                    (async (idProps) => await config.credentialDefaultProvider(idProps?.__config || {})()),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ??\n            loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, { ...NODE_REGION_CONFIG_FILE_OPTIONS, ...profileConfig }),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }, config),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        userAgentAppId: config?.userAgentAppId ?? loadNodeConfig(NODE_APP_ID_CONFIG_OPTIONS, profileConfig),\n    };\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nconst asPartial = (t) => t;\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n        ...resolveDefaultRuntimeConfig(extensionConfiguration),\n        ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),\n        ...resolveHttpAuthRuntimeConfig(extensionConfiguration),\n    };\n};\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultSTSHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class STSClient extends __Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultSTSHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class STSServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { STSServiceException as __BaseException } from \"./STSServiceException\";\nexport const CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretAccessKey && { SecretAccessKey: SENSITIVE_STRING }),\n});\nexport const AssumeRoleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport class ExpiredTokenException extends __BaseException {\n    name = \"ExpiredTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexport class MalformedPolicyDocumentException extends __BaseException {\n    name = \"MalformedPolicyDocumentException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexport class PackedPolicyTooLargeException extends __BaseException {\n    name = \"PackedPolicyTooLargeException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexport class RegionDisabledException extends __BaseException {\n    name = \"RegionDisabledException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexport class IDPRejectedClaimException extends __BaseException {\n    name = \"IDPRejectedClaimException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexport class InvalidIdentityTokenException extends __BaseException {\n    name = \"InvalidIdentityTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexport const AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.WebIdentityToken && { WebIdentityToken: SENSITIVE_STRING }),\n});\nexport const AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport class IDPCommunicationErrorException extends __BaseException {\n    name = \"IDPCommunicationErrorException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\n","import { parseXmlBody as parseBody, parseXmlErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, strictParseInt32 as __strictParseInt32, withBaseException, } from \"@smithy/smithy-client\";\nimport { ExpiredTokenException, IDPCommunicationErrorException, IDPRejectedClaimException, InvalidIdentityTokenException, MalformedPolicyDocumentException, PackedPolicyTooLargeException, RegionDisabledException, } from \"../models/models_0\";\nimport { STSServiceException as __BaseException } from \"../models/STSServiceException\";\nexport const se_AssumeRoleCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleRequest(input, context),\n        [_A]: _AR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithWebIdentityRequest(input, context),\n        [_A]: _ARWWI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_AssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_AssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ExpiredTokenException(body.Error, context);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n    const exception = new IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPRejectedClaimExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPRejectedClaimException(body.Error, context);\n    const exception = new IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n    const exception = new InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n    const exception = new PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_RegionDisabledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_RegionDisabledException(body.Error, context);\n    const exception = new RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_TTK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TTK], context);\n        if (input[_TTK]?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_EI] != null) {\n        entries[_EI] = input[_EI];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    if (input[_TC] != null) {\n        entries[_TC] = input[_TC];\n    }\n    if (input[_SI] != null) {\n        entries[_SI] = input[_SI];\n    }\n    if (input[_PC] != null) {\n        const memberEntries = se_ProvidedContextsListType(input[_PC], context);\n        if (input[_PC]?.length === 0) {\n            entries.ProvidedContexts = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ProvidedContexts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_AssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_WIT] != null) {\n        entries[_WIT] = input[_WIT];\n    }\n    if (input[_PI] != null) {\n        entries[_PI] = input[_PI];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    return entries;\n};\nconst se_policyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_PolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_PolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input[_a] != null) {\n        entries[_a] = input[_a];\n    }\n    return entries;\n};\nconst se_ProvidedContext = (input, context) => {\n    const entries = {};\n    if (input[_PAr] != null) {\n        entries[_PAr] = input[_PAr];\n    }\n    if (input[_CA] != null) {\n        entries[_CA] = input[_CA];\n    }\n    return entries;\n};\nconst se_ProvidedContextsListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_ProvidedContext(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_Tag = (input, context) => {\n    const entries = {};\n    if (input[_K] != null) {\n        entries[_K] = input[_K];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n};\nconst se_tagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_tagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst de_AssumedRoleUser = (output, context) => {\n    const contents = {};\n    if (output[_ARI] != null) {\n        contents[_ARI] = __expectString(output[_ARI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_AssumeRoleResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_SFWIT] != null) {\n        contents[_SFWIT] = __expectString(output[_SFWIT]);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_Pr] != null) {\n        contents[_Pr] = __expectString(output[_Pr]);\n    }\n    if (output[_Au] != null) {\n        contents[_Au] = __expectString(output[_Au]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_Credentials = (output, context) => {\n    const contents = {};\n    if (output[_AKI] != null) {\n        contents[_AKI] = __expectString(output[_AKI]);\n    }\n    if (output[_SAK] != null) {\n        contents[_SAK] = __expectString(output[_SAK]);\n    }\n    if (output[_ST] != null) {\n        contents[_ST] = __expectString(output[_ST]);\n    }\n    if (output[_E] != null) {\n        contents[_E] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_E]));\n    }\n    return contents;\n};\nconst de_ExpiredTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPCommunicationErrorException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPRejectedClaimException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_InvalidIdentityTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_MalformedPolicyDocumentException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_PackedPolicyTooLargeException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_RegionDisabledException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n};\nconst _ = \"2011-06-15\";\nconst _A = \"Action\";\nconst _AKI = \"AccessKeyId\";\nconst _AR = \"AssumeRole\";\nconst _ARI = \"AssumedRoleId\";\nconst _ARU = \"AssumedRoleUser\";\nconst _ARWWI = \"AssumeRoleWithWebIdentity\";\nconst _Ar = \"Arn\";\nconst _Au = \"Audience\";\nconst _C = \"Credentials\";\nconst _CA = \"ContextAssertion\";\nconst _DS = \"DurationSeconds\";\nconst _E = \"Expiration\";\nconst _EI = \"ExternalId\";\nconst _K = \"Key\";\nconst _P = \"Policy\";\nconst _PA = \"PolicyArns\";\nconst _PAr = \"ProviderArn\";\nconst _PC = \"ProvidedContexts\";\nconst _PI = \"ProviderId\";\nconst _PPS = \"PackedPolicySize\";\nconst _Pr = \"Provider\";\nconst _RA = \"RoleArn\";\nconst _RSN = \"RoleSessionName\";\nconst _SAK = \"SecretAccessKey\";\nconst _SFWIT = \"SubjectFromWebIdentityToken\";\nconst _SI = \"SourceIdentity\";\nconst _SN = \"SerialNumber\";\nconst _ST = \"SessionToken\";\nconst _T = \"Tags\";\nconst _TC = \"TokenCode\";\nconst _TTK = \"TransitiveTagKeys\";\nconst _V = \"Version\";\nconst _Va = \"Value\";\nconst _WIT = \"WebIdentityToken\";\nconst _a = \"arn\";\nconst _m = \"message\";\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => __extendedEncodeURIComponent(key) + \"=\" + __extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleResponseFilterSensitiveLog } from \"../models/models_0\";\nimport { de_AssumeRoleCommand, se_AssumeRoleCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRole\", {})\n    .n(\"STSClient\", \"AssumeRoleCommand\")\n    .f(void 0, AssumeRoleResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleCommand)\n    .de(de_AssumeRoleCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_AssumeRoleWithWebIdentityCommand, se_AssumeRoleWithWebIdentityCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleWithWebIdentityCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRoleWithWebIdentity\", {})\n    .n(\"STSClient\", \"AssumeRoleWithWebIdentityCommand\")\n    .f(AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleWithWebIdentityCommand)\n    .de(de_AssumeRoleWithWebIdentityCommand)\n    .build() {\n}\n","import { createAggregatedClient } from \"@smithy/smithy-client\";\nimport { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nimport { STSClient } from \"./STSClient\";\nconst commands = {\n    AssumeRoleCommand,\n    AssumeRoleWithWebIdentityCommand,\n};\nexport class STS extends STSClient {\n}\ncreateAggregatedClient(commands, STS);\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst getAccountIdFromAssumedRoleUser = (assumedRoleUser) => {\n    if (typeof assumedRoleUser?.Arn === \"string\") {\n        const arnComponents = assumedRoleUser.Arn.split(\":\");\n        if (arnComponents.length > 4 && arnComponents[4] !== \"\") {\n            return arnComponents[4];\n        }\n    }\n    return undefined;\n};\nconst resolveRegion = async (_region, _parentRegion, credentialProviderLogger) => {\n    const region = typeof _region === \"function\" ? await _region() : _region;\n    const parentRegion = typeof _parentRegion === \"function\" ? await _parentRegion() : _parentRegion;\n    credentialProviderLogger?.debug?.(\"@aws-sdk/client-sts::resolveRegion\", \"accepting first of:\", `${region} (provider)`, `${parentRegion} (parent client)`, `${ASSUME_ROLE_DEFAULT_REGION} (STS default)`);\n    return region ?? parentRegion ?? ASSUME_ROLE_DEFAULT_REGION;\n};\nexport const getDefaultRoleAssumer = (stsOptions, STSClient) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n        setCredentialFeature(credentials, \"CREDENTIALS_STS_ASSUME_ROLE\", \"i\");\n        return credentials;\n    };\n};\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions, STSClient) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n        if (accountId) {\n            setCredentialFeature(credentials, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        setCredentialFeature(credentials, \"CREDENTIALS_STS_ASSUME_ROLE_WEB_ID\", \"k\");\n        return credentials;\n    };\n};\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\nconst isH2 = (requestHandler) => {\n    return requestHandler?.metadata?.handlerProtocol === \"h2\";\n};\n","import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity, } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nexport const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\n"],"mappings":"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","names":["getRuntimeConfig","emitWarningIfUnsupportedVersion","t","getRuntimeConfig","Command","o","Command","o","STSClient","getDefaultRoleAssumer","getDefaultRoleAssumerWithWebIdentity"]}